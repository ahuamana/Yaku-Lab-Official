// Generated by view binder compiler. Do not edit!
package com.yakulab.feature.profile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.textview.MaterialTextView;
import com.yakulab.feature.profile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCertificationBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialCardView cardType;

  @NonNull
  public final ConstraintLayout clUnlocked;

  @NonNull
  public final ShapeableImageView ivIcon;

  @NonNull
  public final MaterialTextView tvName;

  @NonNull
  public final MaterialTextView tvType;

  private ItemCertificationBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialCardView cardType, @NonNull ConstraintLayout clUnlocked,
      @NonNull ShapeableImageView ivIcon, @NonNull MaterialTextView tvName,
      @NonNull MaterialTextView tvType) {
    this.rootView = rootView;
    this.cardType = cardType;
    this.clUnlocked = clUnlocked;
    this.ivIcon = ivIcon;
    this.tvName = tvName;
    this.tvType = tvType;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCertificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCertificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_certification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCertificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_type;
      MaterialCardView cardType = ViewBindings.findChildViewById(rootView, id);
      if (cardType == null) {
        break missingId;
      }

      id = R.id.cl_unlocked;
      ConstraintLayout clUnlocked = ViewBindings.findChildViewById(rootView, id);
      if (clUnlocked == null) {
        break missingId;
      }

      id = R.id.iv_icon;
      ShapeableImageView ivIcon = ViewBindings.findChildViewById(rootView, id);
      if (ivIcon == null) {
        break missingId;
      }

      id = R.id.tv_name;
      MaterialTextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_type;
      MaterialTextView tvType = ViewBindings.findChildViewById(rootView, id);
      if (tvType == null) {
        break missingId;
      }

      return new ItemCertificationBinding((MaterialCardView) rootView, cardType, clUnlocked, ivIcon,
          tvName, tvType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
